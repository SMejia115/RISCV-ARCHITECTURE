
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA IMMEDIATE LABEL LPAREN REGISTER RPAREN TYPE_B TYPE_EI TYPE_I TYPE_J TYPE_JI TYPE_LI TYPE_R TYPE_S TYPE_Uprogram : instruction program\n              | instructioninstruction : r_inst\n                 | i_inst\n                 | li_inst\n                 | j_inst\n                 | ei_inst\n                 | s_inst\n                 | b_inst\n                 | u_inst\n                 | label_instr_inst : TYPE_R REGISTER COMMA REGISTER COMMA REGISTERi_inst : TYPE_I REGISTER COMMA REGISTER COMMA IMMEDIATE\n            | TYPE_JI REGISTER COMMA REGISTER COMMA IMMEDIATEli_inst : TYPE_LI REGISTER COMMA IMMEDIATE LPAREN REGISTER RPARENj_inst : TYPE_J REGISTER COMMA LABELei_inst : TYPE_EIs_inst : TYPE_S REGISTER COMMA IMMEDIATE LPAREN REGISTER RPARENb_inst : TYPE_B REGISTER COMMA REGISTER COMMA LABELu_inst : TYPE_U REGISTER COMMA IMMEDIATElabel_inst : LABEL COLON'
    
_lr_action_items = {'TYPE_R':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_I':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_JI':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_LI':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_J':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_EI':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_S':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_B':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'TYPE_U':([0,2,3,4,5,6,7,8,9,10,11,18,28,44,47,54,55,56,59,60,61,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'LABEL':([0,2,3,4,5,6,7,8,9,10,11,18,28,36,44,47,53,54,55,56,59,60,61,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-21,44,-16,-20,59,-12,-13,-14,-19,-15,-18,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,18,22,28,44,47,54,55,56,59,60,61,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-17,-1,-21,-16,-20,-12,-13,-14,-19,-15,-18,]),'REGISTER':([12,13,14,15,16,19,20,21,32,33,34,38,48,51,52,],[23,24,25,26,27,29,30,31,40,41,42,46,54,57,58,]),'COLON':([17,],[28,]),'COMMA':([23,24,25,26,27,29,30,31,40,41,42,46,],[32,33,34,35,36,37,38,39,48,49,50,53,]),'IMMEDIATE':([35,37,39,49,50,],[43,45,47,55,56,]),'LPAREN':([43,45,],[51,52,]),'RPAREN':([57,58,],[60,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,22,]),'instruction':([0,2,],[2,2,]),'r_inst':([0,2,],[3,3,]),'i_inst':([0,2,],[4,4,]),'li_inst':([0,2,],[5,5,]),'j_inst':([0,2,],[6,6,]),'ei_inst':([0,2,],[7,7,]),'s_inst':([0,2,],[8,8,]),'b_inst':([0,2,],[9,9,]),'u_inst':([0,2,],[10,10,]),'label_inst':([0,2,],[11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instruction program','program',2,'p_program','yacc.py',5),
  ('program -> instruction','program',1,'p_program','yacc.py',6),
  ('instruction -> r_inst','instruction',1,'p_instruction','yacc.py',14),
  ('instruction -> i_inst','instruction',1,'p_instruction','yacc.py',15),
  ('instruction -> li_inst','instruction',1,'p_instruction','yacc.py',16),
  ('instruction -> j_inst','instruction',1,'p_instruction','yacc.py',17),
  ('instruction -> ei_inst','instruction',1,'p_instruction','yacc.py',18),
  ('instruction -> s_inst','instruction',1,'p_instruction','yacc.py',19),
  ('instruction -> b_inst','instruction',1,'p_instruction','yacc.py',20),
  ('instruction -> u_inst','instruction',1,'p_instruction','yacc.py',21),
  ('instruction -> label_inst','instruction',1,'p_instruction','yacc.py',22),
  ('r_inst -> TYPE_R REGISTER COMMA REGISTER COMMA REGISTER','r_inst',6,'p_r_inst','yacc.py',26),
  ('i_inst -> TYPE_I REGISTER COMMA REGISTER COMMA IMMEDIATE','i_inst',6,'p_i_inst','yacc.py',30),
  ('i_inst -> TYPE_JI REGISTER COMMA REGISTER COMMA IMMEDIATE','i_inst',6,'p_i_inst','yacc.py',31),
  ('li_inst -> TYPE_LI REGISTER COMMA IMMEDIATE LPAREN REGISTER RPAREN','li_inst',7,'p_li_inst','yacc.py',35),
  ('j_inst -> TYPE_J REGISTER COMMA LABEL','j_inst',4,'p_j_inst','yacc.py',39),
  ('ei_inst -> TYPE_EI','ei_inst',1,'p_ei_inst','yacc.py',43),
  ('s_inst -> TYPE_S REGISTER COMMA IMMEDIATE LPAREN REGISTER RPAREN','s_inst',7,'p_s_inst','yacc.py',47),
  ('b_inst -> TYPE_B REGISTER COMMA REGISTER COMMA LABEL','b_inst',6,'p_b_inst','yacc.py',51),
  ('u_inst -> TYPE_U REGISTER COMMA IMMEDIATE','u_inst',4,'p_u_inst','yacc.py',55),
  ('label_inst -> LABEL COLON','label_inst',2,'p_label_inst','yacc.py',59),
]
