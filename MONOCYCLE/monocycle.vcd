$date
	Sun Oct 01 19:46:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module monocycle_tb $end
$var wire 32 ! instruction [31:0] $end
$var reg 1 " clk $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 32 # next_address [31:0] $end
$var wire 32 $ instruction [31:0] $end
$var wire 32 % address [31:0] $end
$scope module instruction_memory $end
$var wire 32 & address [31:0] $end
$var reg 32 ' instruction [31:0] $end
$upscope $end
$scope module program_counter $end
$var wire 1 " clk $end
$var wire 32 ( next_address [31:0] $end
$var wire 32 ) address [31:0] $end
$var reg 32 * address_temp [31:0] $end
$upscope $end
$scope module sum4 $end
$var wire 32 + input_1 [31:0] $end
$var wire 32 , output_32 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
0"
bx !
$end
#5
1"
#10
0"
#15
1"
#20
0"
